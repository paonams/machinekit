TARGETS += ../bin/rs274
# nullcanon.cc is a dummy canon layer for profiling the interpreter
# without the overhead of the canon layer
# to build rs274 with the null canon layer and gprof profiling, invoke make as:
#
# make PROFILE_CFLAGS=-pg PROFILE_LDFLAGS=-pg V=1 USE_NULLCANON=1
#
ifdef USE_NULLCANON
SAISRCS := $(addprefix emc/sai/, nullcanon.cc driver.cc dummyemcstat.cc) \
	emc/rs274ngc/tool_parse.cc emc/task/taskmodule.cc emc/task/taskclass.cc
else
SAISRCS := $(addprefix emc/sai/, saicanon.cc driver.cc dummyemcstat.cc) \
	emc/rs274ngc/tool_parse.cc emc/task/taskmodule.cc emc/task/taskclass.cc
endif
USERSRCS += $(SAISRCS)
LIBREADLINE=-lreadline
LIBFLAGS =
ifeq ($(MODE), target)
#LIBFLAGS =  -L/home/sanjit/Documents/workArea/LINUXCNC/cross_compiler/buildroot-2015.11.1/output/host/usr/arm-buildroot-linux-uclibcgnueabi/sysroot/usr/lib -lintl
LIBFLAGS =  -L$(TARGET_LIBFLAGS) -lintl
endif

CXXFLAGS += -I $(SOFTWARE_ROOT)/custom/lib -DENABLE_LOG_FILE

../bin/rs274: $(call TOOBJS, $(SAISRCS)) \
	$(SHAREDOBJ_PATH)/librs274.so.0 \
	$(SHAREDOBJ_PATH)/liblinuxcnc.a \
	$(SHAREDOBJ_PATH)/libnml.so.0 \
	$(SHAREDOBJ_PATH)/liblinuxcnchal.so.0 \
	$(SHAREDOBJ_PATH)/liblinuxcncini.so.0 \
	$(SHAREDOBJ_PATH)/libpyplugin.so.0 \
	$(SHAREDOBJ_PATH)/librtapi_math.so.0 \
	$(SHAREDOBJ_PATH)/liblinuxcnc-pb2++.so.0 \
	$(SOFTWARE_ROOT)/custom/lib/Log.so
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CXX) $(LDFLAGS) $(PROFILE_LDFLAGS) -Wl,-M,-Map,$@.map,--cref \
	-o $@ $^ $(ULFLAGS) $(BOOST_PYTHON_LIBS) -l$(LIBPYTHON) $(LIBREADLINE) $(LIBFLAGS)
