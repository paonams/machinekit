EMCSHSRCS :=
ifneq ($(MODE), target)
EMCSHSRCS := emc/usr_intf/emcsh.cc \
             emc/usr_intf/shcom.cc
endif
EMCRSHSRCS := emc/usr_intf/emcrsh.cc \
              emc/usr_intf/shcom.cc
EMCSCHEDSRCS := emc/usr_intf/schedrmt.cc \
              emc/usr_intf/emcsched.cc \
              emc/usr_intf/shcom.cc
EMCLCDSRCS := emc/usr_intf/emclcd.cc \
              emc/usr_intf/shcom.cc \
              emc/usr_intf/sockets.c


EMCWEBSRCS := emc/usr_intf/shcom.cc \
		emc/usr_intf/emccontroller.cc \
		emc/usr_intf/emcweb.cc \
		emc/usr_intf/emcweb/mongoose.c \
		emc/usr_intf/emcweb/mongoose_wrapper.cc
HALUISRCS := emc/usr_intf/halui.cc
ifeq "$(HAVE_NCURSES)" "yes"
KEYSTICKSRCS := emc/usr_intf/keystick.cc
endif
ifeq "$(HAVE_XAW)" "yes"
XEMCSRCS := emc/usr_intf/xemc.cc
endif

TCLSRCS := emc/usr_intf/emcsh.cc emc/usr_intf/iosh.cc
USERSRCS += $(EMCSHSRCS) $(EMCRSHSRCS) $(EMCSCHEDSRCS) $(EMCLCDSRCS) $(HALUISRCS) $(KEYSTICKSRCS)
CXXFLAGS += -I $(SOFTWARE_ROOT)/custom/lib -DENABLE_LOG_FILE

ifeq "$(HAVE_NCURSES)" "yes"
USERSRCS += $(KEYSTICKSRCS)
endif

ifeq "$(HAVE_XAW)" "yes"
USERSRCS += $(XEMCSRCS)
endif

ifeq "$(BUILD_EMCWEB)" "yes"
USERSRCS += $(EMCWEBSRCS)
endif

$(call TOOBJSDEPS, $(TCLSRCS)) : EXTRAFLAGS = $(ULFLAGS) $(TCL_CFLAGS)
$(call TOOBJSDEPS, $(EMCSHSRCS)) : EXTRAFLAGS = $(ULFLAGS) $(TCL_CFLAGS) -fPIC
ifeq "$(RUN_IN_PLACE)" "yes"
$(call TOOBJSDEPS, $(EMCWEBSRCS)) : EXTRAFLAGS = -D__DIR__=\"$(EMC2_HOME)\"  -fPIC
else
$(call TOOBJSDEPS, $(EMCWEBSRCS)) : EXTRAFLAGS = -D__DIR__=\"/var/cache/linuxcnc\"  -fPIC
endif
CFLAGS +=pthread
ifneq ($(MODE), target)
../tcl/linuxcnc.so: $(call TOOBJS, $(EMCSHSRCS)) \
	$(SHAREDOBJ_PATH)/liblinuxcnc.a \
	$(SHAREDOBJ_PATH)/liblinuxcncini.so.0 \
	$(SHAREDOBJ_PATH)/libnml.so.0
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CXX) -Wl,-M,-Map,$@.map,--cref -shared $(LDFLAGS) -o $@ $(TCL_CFLAGS) $^ $(TCL_LIBS) -lXinerama
TARGETS += ../tcl/linuxcnc.so
endif
../bin/linuxcncrsh: $(call TOOBJS, $(EMCRSHSRCS)) \
	$(SHAREDOBJ_PATH)/liblinuxcnc.a \
	$(SHAREDOBJ_PATH)/libnml.so.0 \
	$(SHAREDOBJ_PATH)/liblinuxcncini.so.0 \
	$(SHAREDOBJ_PATH)/librtapi_math.so.0 \
	$(SHAREDOBJ_PATH)/Log.so
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CXX) $(LDFLAGS) -Wl,-M,-Map,$@.map,--cref -o $@ $^ -lpthread
TARGETS += ../bin/linuxcncrsh

../bin/schedrmt: $(call TOOBJS, $(EMCSCHEDSRCS)) \
	$(SHAREDOBJ_PATH)/liblinuxcnc.a \
	$(SHAREDOBJ_PATH)/libnml.so.0 \
	$(SHAREDOBJ_PATH)/liblinuxcncini.so.0 \
	$(SHAREDOBJ_PATH)/librtapi_math.so.0 \
	$(SHAREDOBJ_PATH)/Log.so
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CXX) $(LDFLAGS) -Wl,-M,-Map,$@.map,--cref -o $@ $^ -lpthread
TARGETS += ../bin/schedrmt

../bin/linuxcnclcd: $(call TOOBJS, $(EMCLCDSRCS)) \
	$(SHAREDOBJ_PATH)/liblinuxcnc.a \
	$(SHAREDOBJ_PATH)/libnml.so.0 \
	$(SHAREDOBJ_PATH)/liblinuxcncini.so.0 \
	$(SHAREDOBJ_PATH)/librtapi_math.so.0 \
	$(SHAREDOBJ_PATH)/Log.so
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CXX) $(LDFLAGS) -o $@ $^
TARGETS += ../bin/linuxcnclcd


../bin/halui: $(call TOOBJS, $(HALUISRCS)) \
	$(SHAREDOBJ_PATH)/liblinuxcnc.a \
	$(SHAREDOBJ_PATH)/liblinuxcncini.so.0 \
	$(SHAREDOBJ_PATH)/libnml.so.0 \
	$(SHAREDOBJ_PATH)/liblinuxcnchal.so.0 \
	$(SHAREDOBJ_PATH)/librtapi_math.so.0 \
	$(SHAREDOBJ_PATH)/liblinuxcnc-pb2++.so.0 \
	$(SHAREDOBJ_PATH)/Log.so
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CXX) $(LDFLAGS) -o $@ $^ 
TARGETS += ../bin/halui

ifeq "$(HAVE_NCURSES)" "yes"
../bin/keystick: $(call TOOBJS, $(KEYSTICKSRCS)) \
	$(SHAREDOBJ_PATH)/liblinuxcnc.a \
	$(SHAREDOBJ_PATH)/libnml.so.0 \
	$(SHAREDOBJ_PATH)/liblinuxcncini.so.0 \
	$(SHAREDOBJ_PATH)/librtapi_math.so.0 \
	$(SHAREDOBJ_PATH)/Log.so
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CXX) $(LDFLAGS) -o $@ $^ $(KEYSTICKLIBS)
TARGETS += ../bin/keystick
endif

ifeq "$(HAVE_XAW)" "yes"
$(call TOOBJSDEPS,$(XEMCSRCS)): EXTRAFLAGS = $(CFLAGS_X)
../bin/xlinuxcnc: $(call TOOBJS, $(XEMCSRCS)) \
	$(SHAREDOBJ_PATH)/liblinuxcnc.a \
	$(SHAREDOBJ_PATH)/libnml.so.0 \
	$(SHAREDOBJ_PATH)/liblinuxcncini.so.0 \
	$(SHAREDOBJ_PATH)/librtapi_math.so.0 \
	$(SHAREDOBJ_PATH)/Log.so
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CXX) $(LDFLAGS) -o $@ $^ $(XLIBS)
TARGETS += ../bin/xlinuxcnc
endif
#ifeq ($(MODE), target)
#BOOST_SERIALIZATION_LIB =-lboost_serialization
#else
#BOOST_SERIALIZATION_LIB =-lboost_serialization-mt
#endif
#BOOST_THREAD_LIB = -lboost_thread
#BOOST_SYSTEM_LIB = 
ifeq "$(BUILD_EMCWEB)" "yes"
../bin/emcweb: $(call TOOBJS, $(EMCWEBSRCS)) \
	$(SHAREDOBJ_PATH)/liblinuxcnc.a \
	$(SHAREDOBJ_PATH)/libnml.so.0 \
	$(SHAREDOBJ_PATH)/liblinuxcncini.so.0 \
	$(SHAREDOBJ_PATH)/librtapi_math.so.0 \
	$(SHAREDOBJ_PATH)/Log.so
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CXX) $(LDFLAGS) $(BOOST_LDFLAGS) -Wl,-M,-Map,$@.map,--cref -o $@ $(ULFLAGS) $^ \
	    $(BOOST_SERIALIZATION_LIB) $(BOOST_THREAD_LIB) $(BOOST_SYSTEM_LIB) \
	    -lpthread -ldl	
TARGETS += ../bin/emcweb
endif
